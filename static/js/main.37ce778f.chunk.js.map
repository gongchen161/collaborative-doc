{"version":3,"sources":["Firebase.js","AuthContext.js","components/NavBar.js","components/Document.js","components/Signup.js","components/Login.js","components/Home.js","components/Profile.js","App.js","index.js"],"names":["firebase","apps","length","console","log","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","e","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","user","setUser","openSnackbar","setOpenSnackbar","value","message","setMessage","timeout","ms","Promise","resolve","setTimeout","useEffect","onAuthStateChanged","u","Provider","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","inDoc","docId","inUser","canShare","classes","history","useHistory","anchorEl","setAnchorEl","openShareDocForm","setOpenShareDocForm","shareEmailRef","useRef","isCreatingNewDoc","setIsCreatingNewDoc","handleSignout","a","signOut","push","goToProfile","endShareDoc","goToNewDoc","uuid","database","ref","child","SHA256","email","update","createdBy","createdTime","Date","getTime","AppBar","position","color","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Toolbar","IconButton","edge","className","Button","component","Link","to","Typography","variant","onClick","event","currentTarget","id","keepMounted","Boolean","MenuItem","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","inputRef","DialogActions","current","CircularProgress","Document","quill","setTitle","useParams","sessionId","isAuthorized","setIsAuthorized","titleRef","createRef","disableTitle","setDisableTitle","loading","setLoading","result","on","data","childData","val","getEditor","updateContents","delta","uploadTitle","text","trim","size","placeholder","InputLabelProps","shrink","disabled","readOnly","onChange","target","onKeyPress","ev","key","blur","onFocus","onBlur","InputProps","startAdornment","InputAdornment","LinearProgress","thickness","content","source","editor","paper","marginTop","display","flexDirection","alignItems","icon","backgroundColor","palette","primary","dark","form","width","submit","SignUp","emailRef","passwordRef","password2Ref","signUp","preventDefault","createUserWithEmailAndPassword","Container","maxWidth","CssBaseline","Avatar","noValidate","Grid","container","item","xs","required","name","autoComplete","justifyContent","href","Login","login","signInWithEmailAndPassword","padding","textAlign","verticalAlign","secondary","fontSize","relativeDiv","leftIcon","rightIcon","top","right","Home","myDocs","setMyDocs","openDeleteConfirm","setOpenDeleteConfirm","deleteDocTitle","setDeleteDocTitle","deleteDocId","setDeleteDocId","titleData","titleChild","some","el","arr","sort","b","confirmDeleteDoc","deleteDocAction","remove","filter","obj","Box","m","pt","Divider","map","x","i","Card","CardContent","CardActionArea","toString","Profile","App","exact","path","rgb","createMuiTheme","light","main","typography","useNextVariants","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37ce778f.chunk.js","sourcesContent":["\nimport firebase from 'firebase';\n\nexport const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\ntry {\n    if(!firebase.apps.length) {\n        console.log(\"initializing firebase\");\n        firebase.initializeApp(firebaseConfig)\n    } \n} catch (e) {\n    console.log(\"error initializing firebase\", e);\n}\nexport default firebase;\nexport const auth = firebase.auth();","\n\nimport React, { useState, useEffect, useRef, useContext } from 'react'\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport { auth } from './Firebase';\nimport uuid from 'react-uuid'\n\nconst AuthContext = React.createContext();\n\nexport function useAuth(){\n     return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [user, setUser] = useState();\n    const [openSnackbar, setOpenSnackbar] = useState(false)\n    const [message, setMessage] = useState(\"\");\n\n    function timeout(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    \n    const value = {\n        user,\n        openSnackbar,\n        setOpenSnackbar,\n        message,\n        setMessage,\n        timeout\n    }\n\n    useEffect(() => {\n        const cleanup = auth.onAuthStateChanged( (u) => {\n            setUser(u);\n        })\n        return cleanup;\n    }, [])\n  \n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n\n    )\n\n}","import Recat, { useState, useEffect, useRef, createRef } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport '../styles.css'\nimport firebase from '../Firebase';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TitleIcon from '@material-ui/icons/Title';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useAuth } from '../AuthContext';\nimport { Link } from 'react-router-dom';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport uuid from 'react-uuid'\nimport { useHistory } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { auth } from '../Firebase';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SHA256 from \"crypto-js/sha256\";\nimport { CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nexport default function NavBar({inDoc, docId, inUser, canShare}) {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openShareDocForm, setOpenShareDocForm] = useState(false);\n    const { openSnackbar, setOpenSnackbar, message, setMessage, user, timeout } = useAuth()\n    const shareEmailRef = useRef();\n    const [isCreatingNewDoc, setIsCreatingNewDoc] = useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n      };\n    \n      const handleClose = () => {\n        setAnchorEl(null);\n      };\n\n      const handleSignout = async () => {\n        setAnchorEl(null);\n        try {\n            await auth.signOut();\n            history.push('/login')\n        } catch (e) {\n            console.log(e);\n            setMessage(e.message);\n            setOpenSnackbar(true);\n        }\n      };\n\n      const goToProfile = async () => {\n        setAnchorEl(null);\n        history.push(\"/profile\")\n      };\n\n      const startShareDoc = () =>{\n          setOpenShareDocForm(true);\n      }\n\n      const endShareDoc = () => {\n          setOpenShareDocForm(false);\n      }\n\n\n      const processShareDoc = () => {\n        try {\n            console.log(\"++++++ processShareDoc from firebase\")\n         \n            firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(shareEmailRef.current.value)}-user`).child(docId).update({docId:docId});\n        } catch (e) {\n            setOpenSnackbar(true)\n            setMessage(e.message)\n            console.log(\"error loading from firebse\", e)\n        }\n\n        setOpenShareDocForm(false);\n    }\n\n    const goToNewDoc = async (e) => {\n        const docId = uuid();\n        try {\n            setIsCreatingNewDoc(true);\n            console.log(\"++++++ creating doc to firebase\")\n            await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).child(docId).update({docId:docId});\n            await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${docId}-misc`).update({ createdBy: user.email , createdTime: new Date().getTime(), title : \"Untitled\" } );\n        } catch (e) {\n            await timeout(1500)\n            setIsCreatingNewDoc(false);\n            setOpenSnackbar(true)\n            setMessage(\"Error on creating a new document\");\n            return;\n        }\n\n        await timeout(500);\n\n        setIsCreatingNewDoc(false);\n        history.push(`/doc/${docId}`)\n    }\n    return (\n        <AppBar position=\"static\" color=\"primary\">\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n             open={openSnackbar}\n            // onClose={handleClose}\n            message={message}\n            autoHideDuration={3000}\n            onClose={() =>{ setOpenSnackbar(false); setMessage(\"\")}}\n          //  key={vertical + horizontal}\n        />\n        <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <Button component={Link} to=\"/home\" color=\"inherit\"> <HomeIcon /></Button>   \n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n            Collaborative Doc\n            </Typography>\n             {!inUser && <Button component={Link} to=\"/login\" color=\"inherit\"> <AccountCircle/> Log In</Button>}\n             {inUser && !inDoc && <Button onClick={goToNewDoc} color=\"inherit\"> <AddCircleIcon/>   Create A New Doc</Button>}\n             {inUser && inDoc && canShare && <Button onClick={startShareDoc} color=\"inherit\"> \n                    <ShareIcon/>   Share Doc\n                    \n                    </Button>}\n             {inUser && <div>\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} color=\"inherit\">  \n                    <MenuIcon color=\"inherit\" />\n                    </Button>  \n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                    <MenuItem onClick={goToProfile}>Profile</MenuItem>\n                    <MenuItem onClick={handleSignout}>Logout</MenuItem>\n                </Menu>\n                </div>\n             }\n             <Dialog open={openShareDocForm} onClose={endShareDoc} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Share Doc</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                    To share, please enter the email\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Email Address\"\n                    type=\"email\"\n                    fullWidth\n                    inputRef={shareEmailRef}\n                />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={endShareDoc} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={processShareDoc} color=\"primary\">\n                    Share\n                </Button>\n                </DialogActions>\n            </Dialog>\n            \n            <Dialog open={isCreatingNewDoc} onClose={()=>{setIsCreatingNewDoc(false)}} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Creating Doc</DialogTitle>\n                <DialogContent>\n                <DialogContentText className='center'>\n                    Creating New Doc... Please wait...\n                    <CircularProgress  />\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                </DialogActions>\n            </Dialog>\n\n\n\n        </Toolbar>\n        </AppBar> \n    )\n}\n","import Recat, { useState, useEffect, useRef, createRef } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport '../styles.css'\nimport firebase from '../Firebase';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TitleIcon from '@material-ui/icons/Title';\nimport { useAuth } from '../AuthContext';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nimport NavBar from './NavBar';\nimport { useHistory } from 'react-router-dom';\nimport { CircularProgress, LinearProgress } from '@material-ui/core';\nimport uuid from 'react-uuid'\nimport SHA256 from \"crypto-js/sha256\";\nimport { IsoTwoTone } from '@material-ui/icons';\n\nexport default function Document() {\n\n    const quill = useRef();\n    const [text, setText] = useState(\"\");\n    const [title, setTitle] = useState(\"Untitled\");\n    const { docId } = useParams();\n    const [sessionId, setSessionId] = useState(uuid());\n\n    const [isAuthorized, setIsAuthorized] = useState(0);\n\n    const titleRef = createRef();\n    const [disableTitle, setDisableTitle] = useState(false)\n    const { user, setOpenSnackbar, setMessage, timeout } = useAuth()\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (!user) {\n            history.push('/login')\n        }\n    }, [])\n    \n   \n    // Initialize Firebase\n    useEffect( async () => {\n        setLoading(true)\n        setIsAuthorized(0)\n        try {\n            let result = 0;\n            await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).on('child_added', function(data) {\n                console.log(\"------ fetching user from firebase\")\n                var childData = data.val();\n                if (childData && childData.docId === docId) {\n                    result = 1;\n                }\n    \n            })\n\n          \n            if (result !== 1) {\n                result = 2;\n            }\n\n            setIsAuthorized(result);\n\n            if (result === 2) {\n                return;\n            }\n\n\n\n             firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${docId}-content`).on('child_added', function(data) {\n                console.log(\"------ fetching content from firebase\")\n                var childData = data.val();\n                if (quill && quill.current && childData.sessionId !== sessionId) {\n                    const editor = quill.current.getEditor();\n                    editor.updateContents(childData.delta);\n                }\n            })\n\n             firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${docId}-misc`).on('value', function(data){\n                console.log(\"------ fetching title from firebase\")\n                var childData = data.val();\n                setTitle(childData.title);\n                \n            })\n        } catch (e) {\n            console.log(\"error loading from firebse\", e)\n        }\n\n        setTimeout( () => setLoading(false), 1000);\n    }, []);\n\n    const uploadChanges = (content, delta, source, editor) => {\n        if (source !== 'user') {\n            return;\n        }\n        console.log(\"++++++ uploading delta to firebase\")\n        firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${docId}-content`).push({ sessionId: sessionId , delta : delta } );\n    }\n\n\n    const uploadTitle = (text) => {\n        if (!text || text.trim().length === 0) {\n            return;\n        }\n        console.log(\"++++++ uploading title to firebase\")\n        firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${docId}-misc`).update({title : text});\n    }\n\n    return (\n        <div>\n            \n            <NavBar inDoc={true} docId={docId} inUser={true} canShare={isAuthorized=== 1}/>\n            { isAuthorized === 0 && <div className='center'><CircularProgress color='primary'size={60} /><Typography variant=\"h5\">Loading Docs...</Typography></div> }\n            {isAuthorized === 2 && <div className='center'><ErrorIcon color='primary'size={60} /><Typography variant=\"h5\">You cannot view this doc</Typography></div> }\n            { isAuthorized === 1 && <div>\n                <TextField\n                    id=\"standard-full-width\"\n                    placeholder=\"   Document Title\"\n                    fullWidth\n                    value={title}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputRef={titleRef}\n                    disabled={disableTitle || loading}\n                    readOnly={true}\n                    onChange={(e)=>{\n                        if (e.target.value.trim().length === 0) {\n                            setOpenSnackbar(true);\n                            setMessage(\"Title cannot be empty\");\n                            return;\n                        }\n                        setTitle(e.target.value);\n                    }}\n                    onKeyPress={(ev) => {\n                        if (ev.key === 'Enter') {\n                            titleRef.current.blur();\n                            setDisableTitle(true);\n                        // setTitle(titleRef.current.value)\n                            uploadTitle(titleRef.current.value)\n                            // console.log(\"bluering\")\n                        }\n                    }}\n                    onClick={()=>{\n                        setDisableTitle(false)\n                    }}\n                    onFocus={()=>{\n                        setDisableTitle(false)\n                        console.log(22)\n                    }}\n                    onBlur={()=>{\n                        setDisableTitle(true)\n                        console.log(333)\n                        // setTitle(titleRef.current.value)\n                        uploadTitle(titleRef.current.value)\n                    }\n\n                    }\n                    InputProps={{\n                        startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <TitleIcon />\n                        </InputAdornment>\n                        ),\n                    }}\n                />\n                {loading && <div><LinearProgress color='primary' size={80} thickness={10} /></div> }\n\n                <ReactQuill \n                    theme=\"snow\"\n                    onChange={uploadChanges}\n                    readOnly={ loading}\n                    ref={quill}\n                />\n            </div> }\n        </div>\n    )\n\n}","\nimport React, { useRef, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport NavBar from './NavBar';\n\nimport { auth } from '../Firebase';\n\nimport { useAuth } from '../AuthContext';\nimport { useHistory } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    icon: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.dark\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n  export default function SignUp() {\n    const classes = useStyles();\n  \n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const password2Ref = useRef();\n\n    const { setOpenSnackbar, setMessage, user } = useAuth()\n    const history = useHistory();\n\n    useEffect(() => {\n        if (user) {\n            history.push('/home')\n        }\n      }, [])\n\n   \n\n    const signUp = async (e) => {\n        e.preventDefault();\n        if (passwordRef.current.value !== password2Ref.current.value) {\n            setMessage(\"password does not match\");\n            setOpenSnackbar(true);\n            return;\n        }\n        try {\n            await auth.createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value);\n            history.push('/home')\n        } catch (e) {\n            console.log(e);\n            setMessage(e.message);\n            setOpenSnackbar(true);\n        }\n    }\n\n    return (\n        <div>\n\n            <NavBar />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.icon}>\n            <AccountCircleIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputRef={emailRef}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  inputRef={passwordRef}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password2\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"password2\"\n                  inputRef={password2Ref}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={ signUp }\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n\n\n      </div>\n    );\n  }\n  ","\nimport React, { useRef, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport NavBar from './NavBar';\n\nimport { auth } from '../Firebase';\n\nimport { useAuth } from '../AuthContext';\n\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    icon: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.dark\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n  export default function Login() {\n    const classes = useStyles();\n  \n    const emailRef = useRef();\n    const passwordRef = useRef();\n\n    const history = useHistory();\n\n    const { setOpenSnackbar, setMessage, user } = useAuth()\n\n    useEffect(() => {\n        if (user) {\n            history.push('/home')\n        }\n      }, [])\n    const login = async (e) => {\n        e.preventDefault();\n\n        try {\n            await auth.signInWithEmailAndPassword(emailRef.current.value, passwordRef.current.value);\n            history.push('/home')\n        } catch (e) {\n            console.log(e);\n            setMessage(e.message);\n            setOpenSnackbar(true);\n        }\n    }\n\n    return (\n        <div>\n\n            <NavBar />\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                    <Avatar className={classes.icon}>\n                        <AccountCircleIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                    Login\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            inputRef={emailRef}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            inputRef={passwordRef}\n                            />\n                        </Grid>\n                        </Grid>\n                        <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={ login }\n                        >\n                        Log In\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"#/signup\" variant=\"body2\">\n                            Don't have an account? Sign up\n                            </Link>\n                        </Grid>\n                        </Grid>\n                    </form>\n                    </div>\n                </Container>\n      </div>\n    );\n  }\n  ","import React, { useEffect, useState } from 'react'\nimport { useAuth } from '../AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport NavBar from './NavBar';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { useHistory } from 'react-router-dom';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport { CircularProgress, LinearProgress, Typography } from '@material-ui/core';\nimport SHA256 from \"crypto-js/sha256\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'left',\n      verticalAlign: 'middle',\n      color: theme.palette.text.secondary,\n      fontSize: '30px'\n    },\n    relativeDiv: {\n        position: 'relative',\n    },\n    leftIcon: {\n        flexGrow: 1,\n    },\n    rightIcon: {\n        display:'block',\n        position: 'absolute',\n        top: '-7px',\n        right: '-10px'\n    },\n    icon: {\n        color: 'rgb(48, 128, 188)'\n    }\n  }));\n\nfunction Home() {\n\n    const { user, timeout, setMessage, setOpenSnackbar } = useAuth();\n    const classes = useStyles();\n    const history = useHistory();\n    const [myDocs, setMyDocs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\n    const [deleteDocTitle, setDeleteDocTitle] = useState(\"\");\n    const [deleteDocId, setDeleteDocId] = useState(\"\");\n    useEffect( () => {\n        if (!user) {\n            history.push('/login')\n            return;\n        }\n\n        console.log(\"start loading\")\n        setLoading(true)\n        console.log(\"done loading\")\n\n        firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).on('child_added', function(data) {\n            console.log(\"------ fetching user from firebase\")\n            var childData = data.val();\n            if (childData) {\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${childData.docId}-misc`).on('value', function(titleData) {\n                    console.log(\"------ fetching user-title from firebase\")\n                    var titleChild = titleData.val();\n                    const found = myDocs.some(el => el.docId === childData.docId);\n                    if (!found) {\n                        setMyDocs(arr =>[...arr, {...titleChild, docId : childData.docId}].sort((a, b) =>{\n                            return a.createdTime < b.createdTime;\n                        }))\n                    }\n                })\n            }\n\n        })\n\n        console.log(myDocs)\n       \n        setTimeout( ()=>setLoading(false), 1000);\n\n      }, [])\n    console.log(\"home page rendering\")\n\n    const confirmDeleteDoc = (open, title, docId) => {\n        setOpenDeleteConfirm(open); \n        setDeleteDocTitle(title);\n        setDeleteDocId(docId);\n    }\n\n    const deleteDocAction = async () => {\n        try {\n            await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).child(deleteDocId).remove();\n        } catch (e) {\n            setOpenSnackbar(true)\n            setMessage(e.message)\n            confirmDeleteDoc(false, \"\", \"\")\n            return\n        }\n        setMyDocs(arr =>[...arr].filter(obj=>obj.docId !== deleteDocId).sort((a, b) =>{\n            return a.createdTime < b.createdTime;\n        }))\n        confirmDeleteDoc(false, \"\", \"\")\n    }\n\n    return (\n        <div>\n            <NavBar inUser={true} ></NavBar>\n            {loading && <div className='center'><CircularProgress color='primary'size={60} /><Typography variant=\"h5\">Loading Docs...</Typography></div> }\n            { !loading && <Box m={2} pt={3}>\n                <Box m={2} pt={3}>\n                <Typography className='center' variant=\"h4\" > My Docs</Typography>\n                <Divider variant=\"middle\"/>\n                </Box>\n                <Grid container spacing={3}>\n                {(myDocs.length === 0 || !myDocs.some(el => el.createdBy === user.email)) ? <Typography variant=\"h5\" >No docs found</Typography> :\n                [...myDocs].map((x, i) => \n                    x.createdBy === user.email &&\n                    <Grid item xs={4} key={x.docId}>\n                        <Card className={classes.root}>\n                            <CardContent   className={classes.paper}> \n                                <Typography className={classes.relativeDiv}>\n                                    <AssignmentIcon className={classes.leftIcon} color='primary' /> \n                                    <Button  onClick={()=>{confirmDeleteDoc(true, x.title, x.docId)}}className={classes.rightIcon}><DeleteForeverIcon  color=\"primary\"/></Button>\n                                </Typography>\n                                <CardActionArea component={Link} to={`/doc/${x.docId}`}>    \n                                        <Typography variant=\"h5\" > {x.title}</Typography>\n                                        <Typography variant=\"body1\" > {\" \"}</Typography>\n                                        <Typography variant=\"caption\" > {new Date(x.createdTime).toString()}</Typography>\n                                </CardActionArea>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                )}\n                </Grid>\n                <Box m={2} pt={3}>\n                <Typography className='center' variant=\"h4\" > Docs shared to me</Typography>\n                <Divider variant=\"middle\" />\n                </Box>\n                \n                <Grid container spacing={3}>\n                {(myDocs.length === 0 || !myDocs.some(el => el.createdBy !== user.email)) ? <Typography variant=\"h5\" >No docs found</Typography> :\n                [...myDocs].map((x, i) => \n                    x.createdBy !== user.email &&\n                    <Grid item xs={4} key={x.docId}>\n                        <Card className={classes.root}>\n                        <CardContent   className={classes.paper}> \n                               <Typography className={classes.relativeDiv}>\n                                    <AssignmentIcon className={classes.leftIcon} color='primary' /> \n                                    <Button  onClick={()=>{confirmDeleteDoc(true, x.title, x.docId)}}className={classes.rightIcon}><DeleteForeverIcon  color=\"primary\"/></Button>\n                                </Typography>\n\n                            <CardActionArea component={Link} to={`/doc/${x.docId}`}>\n                            \n                                <Typography variant=\"h5\" > {x.title}</Typography>\n                                <Typography variant=\"body1\" > From: {x.createdBy}</Typography>\n                                <Typography variant=\"caption\" > {new Date(x.createdTime).toString()}</Typography>\n                                 \n                            </CardActionArea>\n                        </CardContent>\n                        </Card>\n\n                    </Grid>\n                )}\n                </Grid>\n\n            </Box> }\n\n            <Dialog open={openDeleteConfirm} onClose={()=>{confirmDeleteDoc(false, \"\", \"\")}} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Deleting Doc</DialogTitle>\n                <DialogContent>\n                <DialogContentText className='center'>\n                    Delete {deleteDocTitle} ?\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={()=>{confirmDeleteDoc(false, \"\", \"\")}} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={()=>{deleteDocAction()}} color=\"primary\">\n                    Delete\n                </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useEffect, useState } from 'react'\nimport { useAuth } from '../AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport NavBar from './NavBar';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { useHistory } from 'react-router-dom';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'left',\n      verticalAlign: 'middle',\n      color: theme.palette.text.secondary,\n      fontSize: '30px'\n    },\n  }));\n\nfunction Profile() {\n\n    const { user } = useAuth();\n    const classes = useStyles();\n    const history = useHistory();\n    const [myDocs, setMyDocs] = useState([]);\n\n    useEffect(() => {\n        if (!user) {\n            history.push('/login')\n            return;\n        }\n      }, [])\n\n    return (\n       \n\n        <div>\n            <NavBar inUser={true}></NavBar>\n                <Card className='center'>\n                    <AccountCircle color='primary' size={44}> </AccountCircle>\n                    <Typography>Email: {user.email}</Typography>\n                </Card>\n        </div>\n    )\n}\n\nexport default Profile\n","\nimport Recat, { useState, useEffect, useRef } from 'react'\nimport Document from \"./components/Document\";\nimport Signup from './components/Signup';\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Profile from './components/Profile'\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\" \nimport { AuthProvider } from './AuthContext';\nimport uuid from 'react-uuid'\nimport SHA256 from \"crypto-js/sha256\";\nfunction App() {\n\n  var sha256Hash = SHA256(\"Test1\");\n  return (\n    <AuthProvider>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to={`/home`} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route path=\"/doc/:docId\">\n          <Document/>\n        </Route>\n      </Switch>\n    </HashRouter>\n\n  </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';  \n\nconst rgb = 'rgb(48, 128, 188)';\nconst theme = createMuiTheme({\n  palette: {\n     primary: {\n        light: rgb,\n        main: rgb,\n        dark: rgb\n     },\n     secondary: {\n       main: rgb,\n     },\n  },\n  typography: { \n     useNextVariants: true\n  }\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme = { theme }>\n    <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}