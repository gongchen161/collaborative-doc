{"version":3,"sources":["Firebase.js","AuthContext.js","components/NavBar.js","components/Note.js","components/Intro.js","components/Signup.js","components/Login.js","components/Home.js","components/Loading.js","components/Profile.js","RouteWrapper.js","App.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebaseApp","firebase","initializeApp","firebaseAuth","auth","AuthContext","React","createContext","useAuth","useContext","useStyles","makeStyles","theme","center","display","flexDirection","alignItems","justifyContent","height","marginTop","left","width","float","right","border","borderRadius","marginRight","icon","margin","spacing","form","submit","divider","AuthProvider","children","useState","user","setUser","openSnackbar","setOpenSnackbar","message","setMessage","firebaseInitDone","setFirebaseInitDone","value","timeout","ms","Promise","resolve","setTimeout","useEffect","console","log","onAuthStateChanged","u","Provider","root","flexGrow","menuButton","title","columns","field","headerName","NavBar","inNote","noteId","inUser","canShare","ownerEmail","sharedUsers","setSharedUsers","classes","history","useHistory","anchorEl","setAnchorEl","openShareNoteForm","setOpenShareNoteForm","openViewSharedUsers","setOpenViewSharedUsers","shareEmailRef","useRef","selectedUserEmails","setSelectedUserEmails","isCreatingNewNote","setIsCreatingNewNote","endShareNote","endOpenViewSharedUsers","goToNewNote","e","a","uuid","database","ref","REACT_APP_DB_NAME","child","SHA256","email","update","createdBy","createdTime","Date","getTime","push","AppBar","position","color","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Toolbar","IconButton","edge","className","Button","component","Link","to","Typography","variant","onClick","event","currentTarget","id","keepMounted","Boolean","MenuItem","signOut","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","inputRef","DialogActions","userToShare","current","includes","userEmail","style","rows","getRowId","row","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","hideFooter","onSelectionModelChange","ids","finalSharedUsers","i","length","selectedEmail","remove","CircularProgress","Note","quill","setTitle","setOwnerEmail","useParams","sessionId","isAuthorized","setIsAuthorized","titleRef","createRef","disableTitle","setDisableTitle","loading","setLoading","result","data","childData","val","once","on","getEditor","updateContents","delta","getInfo","uploadTitle","text","trim","size","placeholder","InputLabelProps","shrink","disabled","readOnly","onChange","target","onKeyPress","ev","key","blur","onFocus","onBlur","InputProps","startAdornment","InputAdornment","LinearProgress","thickness","content","source","editor","Intro","Container","maxWidth","Divider","SignUp","emailRef","passwordRef","password2Ref","signUp","preventDefault","createUserWithEmailAndPassword","CssBaseline","noValidate","Grid","container","item","xs","required","name","autoComplete","href","Login","login","signInWithEmailAndPassword","paper","padding","textAlign","verticalAlign","palette","secondary","fontSize","relativeDiv","leftIcon","rightIcon","top","Home","myNotes","setMyNotes","openDeleteConfirm","setOpenDeleteConfirm","deleteNoteTitle","setDeleteNoteTitle","deleteNoteId","setDeleteNoteId","isOwner","setIsOwner","titleData","titleChild","some","el","arr","sort","b","confirmDeleteNote","deleteNoteAction","sharedEmail","filter","obj","Box","m","pt","map","x","Card","CardContent","CardActionArea","toString","Loading","Profile","RouteWrapper","comp","others","render","props","App","exact","path","rgb","createTheme","primary","light","main","dark","typography","useNextVariants","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a968001.chunk.js","sourcesContent":["\nimport firebase from 'firebase';\n\nexport const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nexport default firebaseApp;\nexport const firebaseAuth = firebase.auth();","\n\nimport React, { useState, useEffect, useContext } from 'react'\nimport {firebaseAuth} from './Firebase';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport const useStyles = makeStyles((theme) => ({\n  center: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '500px',\n    marginTop: '25px'\n  },\n  left: {\n    width: '40%',\n    float: 'left',\n    marginTop: '25px'\n  },\n\n  right: {\n    width: '40%',\n    float: 'left',\n    border: \"1px solid grey\",\n    borderRadius: '25px',\n    marginTop: '25px',\n    marginRight: '25px'\n  },\n\n  icon: {\n    margin: theme.spacing(1),\n    width: 60,\n    height: 60\n  },\n  form: {\n    width: '60%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n\n  divider: {\n    margin: theme.spacing(3),\n  }\n}));\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState();\n  const [openSnackbar, setOpenSnackbar] = useState(false)\n  const [message, setMessage] = useState(\"\");\n  const [firebaseInitDone, setFirebaseInitDone] = useState(false)\n\n  function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  const value = {\n    user,\n    openSnackbar,\n    setOpenSnackbar,\n    message,\n    setMessage,\n    timeout\n  }\n\n  useEffect(() => {\n    console.log(\"CC\")\n    const cleanup = firebaseAuth.onAuthStateChanged((u) => {\n      setUser(u);\n      setFirebaseInitDone(true)\n    })\n    return cleanup;\n  }, [])\n\n\n  return (\n    <AuthContext.Provider value={value}>\n      {firebaseInitDone && children}\n    </AuthContext.Provider>\n\n  )\n\n}","import  { useState, useRef } from 'react'\nimport 'react-quill/dist/quill.snow.css';\nimport '../styles.css'\nimport firebase from '../Firebase';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useAuth } from '../AuthContext';\nimport { Link } from 'react-router-dom';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport uuid from 'react-uuid'\nimport { useHistory } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { firebaseAuth } from '../Firebase';\nimport ShareIcon from '@material-ui/icons/Share';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SHA256 from \"crypto-js/sha256\";\nimport { CircularProgress } from '@material-ui/core';\nimport { DataGrid, GridRowsProp, GridColDef } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst columns = [\n    { field: 'userEmail', headerName: 'Email', width: 200 },\n];\n\nexport default function NavBar({ inNote, noteId, inUser, canShare, ownerEmail, sharedUsers, setSharedUsers }) {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openShareNoteForm, setOpenShareNoteForm] = useState(false);\n    const [openViewSharedUsers, setOpenViewSharedUsers] = useState(false);\n    const { openSnackbar, setOpenSnackbar, message, setMessage, user, timeout } = useAuth()\n    const shareEmailRef = useRef();\n    const [selectedUserEmails, setSelectedUserEmails] = useState([]);\n    const [isCreatingNewNote, setIsCreatingNewNote] = useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleSignout = () => {\n        setAnchorEl(null);\n        try {\n            firebaseAuth.signOut();\n            history.push('/login')\n        } catch (e) {\n            setMessage(e.message);\n            setOpenSnackbar(true);\n        }\n    };\n\n    const goToProfile = () => {\n        setAnchorEl(null);\n        history.push(\"/profile\")\n    };\n\n    const startShareNote = () => {\n        setOpenShareNoteForm(true);\n    }\n\n    const endShareNote = () => {\n        setOpenShareNoteForm(false);\n    }\n\n    const startOpenViewSharedUsers = () => {\n        setOpenViewSharedUsers(true);\n    }\n\n    const endOpenViewSharedUsers = () => {\n        setOpenViewSharedUsers(false);\n    }\n\n    const removeSharedUsers = () => {\n        const finalSharedUsers = [];\n        for(let i = 0; i < sharedUsers.length; i++) {\n            if (!selectedUserEmails.includes(sharedUsers[i].userEmail)) {\n                finalSharedUsers.push(sharedUsers[i]);\n            }\n        }\n        firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-shared`).update({ sharedUsers: finalSharedUsers });\n\n        for (let i = 0; i < selectedUserEmails.length; i++) {\n            const selectedEmail = selectedUserEmails[i];\n            firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(selectedEmail)}-user`).child(noteId).remove();\n        }\n        if (finalSharedUsers.length === 0) {\n            setSharedUsers(finalSharedUsers);\n        }\n        setOpenViewSharedUsers(false);\n    }\n\n    const processShareNote = () => {\n        try {\n            const userToShare = shareEmailRef.current.value\n            if (userToShare && !sharedUsers.includes(userToShare)) {\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(shareEmailRef.current.value)}-user`).child(noteId).update({ noteId: noteId });\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-shared`).update({ sharedUsers: [...sharedUsers, {userEmail : userToShare}] });\n             //   setSharedUsers(arr => [...arr, {userEmail : userToShare}]);\n                setOpenViewSharedUsers()\n            }\n        } catch (e) {\n            setOpenSnackbar(true)\n            setMessage(e.message)\n        }\n\n        setOpenShareNoteForm(false);\n    }\n\n    const goToNewNote = async (e) => {\n        const noteId = uuid();\n        try {\n            setIsCreatingNewNote(true);\n            await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).child(noteId).update({ noteId: noteId });\n            await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-misc`).update({ createdBy: user.email, createdTime: new Date().getTime(), title: \"Untitled\" });\n        } catch (e) {\n            await timeout(1500)\n            setIsCreatingNewNote(false);\n            setOpenSnackbar(true)\n            setMessage(\"Error on creating a new Note\");\n            return;\n        }\n\n        await timeout(500);\n\n        setIsCreatingNewNote(false);\n        history.push(`/note/${noteId}`)\n    }\n    return (\n        <AppBar position=\"static\" color=\"primary\">\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                open={openSnackbar}\n                // onClose={handleClose}\n                message={message}\n                autoHideDuration={3000}\n                onClose={() => { setOpenSnackbar(false); setMessage(\"\") }}\n            //  key={vertical + horizontal}\n            />\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <Button component={Link} to=\"/home\" color=\"inherit\"> <HomeIcon /></Button>\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Collaborative Note\n                </Typography>\n                {!inUser && <Button component={Link} to=\"/login\" color=\"inherit\"> <AccountCircle /> Log In</Button>}\n                {inUser && !inNote && <Button onClick={goToNewNote} color=\"inherit\"> <AddCircleIcon />   Create A New Note</Button>}\n                \n                {inUser && inNote && canShare && user.email && user.email === ownerEmail && <Button onClick={startShareNote} color=\"inherit\">\n                    <ShareIcon />   Share With Friend\n                </Button>}\n                {inUser && inNote && canShare && user.email && user.email === ownerEmail && <Button onClick={startOpenViewSharedUsers} color=\"inherit\">\n                    <PeopleOutlineIcon />   Shared Users\n                </Button>}\n\n                {inUser && inNote && canShare && user.email !== ownerEmail &&  <Typography variant=\"h6\">\n                    Shared by: {ownerEmail}\n                </Typography>}\n\n                {inUser && <div>\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} color=\"inherit\">\n                        <MenuIcon color=\"inherit\" />\n                    </Button>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={goToProfile}>Profile</MenuItem>\n                        <MenuItem onClick={handleSignout}>Logout</MenuItem>\n                    </Menu>\n                </div>\n                }\n                <Dialog open={openShareNoteForm} onClose={endShareNote} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Share Note</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            To share, please enter the email\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Email Address\"\n                            type=\"email\"\n                            fullWidth\n                            inputRef={shareEmailRef}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={endShareNote} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={processShareNote} color=\"primary\">\n                            Share\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                \n                <Dialog open={openViewSharedUsers} onClose={endOpenViewSharedUsers} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Shared Users</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {\"     These users have access to this note:          \"} \n                        </DialogContentText>\n                        <div style={{ height: 300 }}>\n                            <DataGrid \n                                rows={sharedUsers ? [...sharedUsers] : []}  \n                                getRowId={(row) => row.userEmail}\n                                columns={columns} \n                                pageSize={5}\n                                rowsPerPageOptions={[5]}\n                                checkboxSelection\n                                disableSelectionOnClick\n                                hideFooter\n                                onSelectionModelChange={(ids) => {\n                                    setSelectedUserEmails([...ids])\n                                }}\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={removeSharedUsers} color=\"primary\">\n                            Remove Selected Users\n                        </Button>\n                        <Button onClick={endOpenViewSharedUsers} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={isCreatingNewNote} onClose={() => { setIsCreatingNewNote(false) }} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Creating Note</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText className='center'>\n                            Creating New Note... Please wait...\n                            <CircularProgress />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    </DialogActions>\n                </Dialog>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import { useState, useEffect, useRef, createRef } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport '../styles.css'\nimport firebase from '../Firebase';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TitleIcon from '@material-ui/icons/Title';\nimport { useAuth } from '../AuthContext';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nimport NavBar from './NavBar';\nimport { useHistory } from 'react-router-dom';\nimport { CircularProgress, LinearProgress } from '@material-ui/core';\nimport uuid from 'react-uuid'\nimport SHA256 from \"crypto-js/sha256\";\n\nexport default function Note() {\n\n    const quill = useRef();\n    const [title, setTitle] = useState(\"Untitled\");\n    const [sharedUsers, setSharedUsers] = useState([]);\n    const [ownerEmail, setOwnerEmail] = useState(\"NULL\");\n    const { noteId } = useParams();\n    const [sessionId] = useState(uuid());\n\n    const [isAuthorized, setIsAuthorized] = useState(0);\n\n    const titleRef = createRef();\n    const [disableTitle, setDisableTitle] = useState(false)\n    const { user, setOpenSnackbar, setMessage } = useAuth()\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (!user) {\n            history.push('/login')\n        }\n    }, [user])\n\n\n    // Initialize Firebase\n    useEffect( () => {\n        setLoading(true)\n        setIsAuthorized(0)\n        try {\n            const getInfo = async () => {\n                let result = 0;\n                await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).once('child_added', await function (data) {\n                    var childData = data.val();\n                    if (childData && childData.noteId === noteId) {\n                        result = 1;\n                    }\n\n                })\n\n                if (result !== 1) {\n                    result = 2;\n                }\n\n                setIsAuthorized(result);\n\n                if (result === 2) {\n                    return;\n                }\n\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-content`).on('child_added', function (data) {\n                    var childData = data.val();\n                    if (quill && quill.current && childData.sessionId !== sessionId) {\n                        const editor = quill.current.getEditor();\n                        editor.updateContents(childData.delta);\n                    }\n                })\n\n\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-misc`).on('value', function (data) {\n                    var childData = data.val();\n                    if (childData) {\n                        setTitle(childData.title);\n                        setOwnerEmail( childData.createdBy );\n                    }\n\n                })\n\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-shared`).on('value', function (data) {\n                    var childData = data.val();\n                    if (childData) {\n                        setSharedUsers(childData.sharedUsers);\n                    }\n                })\n            };\n            getInfo();\n        } catch (e) {\n        }\n\n        setTimeout(() => setLoading(false), 1000);\n    }, []);\n\n    const uploadChanges = (content, delta, source, editor) => {\n        if (source !== 'user') {\n            return;\n        }\n        firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-content`).push({ sessionId: sessionId, delta: delta });\n    }\n\n\n    const uploadTitle = (text) => {\n        if (!text || text.trim().length === 0) {\n            return;\n        }\n        firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${noteId}-misc`).update({ title: text });\n    }\n\n    return (\n        <div>\n\n            <NavBar inNote={true} noteId={noteId} inUser={true} canShare={isAuthorized === 1} ownerEmail={ownerEmail} sharedUsers={sharedUsers} setSharedUsers={setSharedUsers} />\n            {isAuthorized === 0 && <div className='center'><CircularProgress color='primary' size={60} /><Typography variant=\"h5\">Loading Notes...</Typography></div>}\n            {isAuthorized === 2 && <div className='center'><ErrorIcon color='primary' size={60} /><Typography variant=\"h5\">You cannot view this note</Typography></div>}\n            {user && isAuthorized === 1 && <div>\n                <TextField\n                    id=\"standard-full-width\"\n                    placeholder=\"   Note Title\"\n                    fullWidth\n                    value={title}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    inputRef={titleRef}\n                    disabled={disableTitle || loading}\n                    readOnly={true}\n                    onChange={(e) => {\n                        if (e.target.value.trim().length === 0) {\n                            setOpenSnackbar(true);\n                            setMessage(\"Title cannot be empty\");\n                            return;\n                        }\n                        setTitle(e.target.value);\n                    }}\n                    onKeyPress={(ev) => {\n                        if (ev.key === 'Enter') {\n                            titleRef.current.blur();\n                            setDisableTitle(true);\n                            // setTitle(titleRef.current.value)\n                            uploadTitle(titleRef.current.value)\n                        }\n                    }}\n                    onClick={() => {\n                        setDisableTitle(false)\n                    }}\n                    onFocus={() => {\n                        setDisableTitle(false)\n                    }}\n                    onBlur={() => {\n                        setDisableTitle(true)\n                        // setTitle(titleRef.current.value)\n                        uploadTitle(titleRef.current.value)\n                    }\n\n                    }\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <TitleIcon />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                {loading && <div><LinearProgress color='primary' size={80} thickness={10} /></div>}\n\n                {user && <ReactQuill\n                    theme=\"snow\"\n                    onChange={uploadChanges}\n                    readOnly={loading}\n                    ref={quill}\n                />}\n            </div>}\n        </div>\n    )\n\n}","\nimport React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Divider from '@material-ui/core/Divider';\nimport { useStyles } from '../AuthContext';\nimport Share from '@material-ui/icons/Share';\n\n\nexport default function Intro() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"lg\">\n\n        <div className={classes.center}>\n\n          <NoteAddIcon color='primary' className={classes.icon} />\n          <Typography component=\"h1\" variant=\"h5\"  >Create a note</Typography>\n          <Divider variant=\"inset\" className={classes.divider} />\n\n          <Share color='primary' className={classes.icon} />\n          <Typography component=\"h1\" variant=\"h5\"  >Share with someone</Typography>\n          <Divider variant=\"inset\" className={classes.divider} />\n\n          <GroupIcon color='primary' className={classes.icon} />\n          <Typography component=\"h1\" variant=\"h5\"  >Edit and study together</Typography>\n          <Divider variant=\"inset\" className={classes.divider} />\n        </div>\n      </Container>\n    </div>\n  );\n}\n","\nimport React, { useRef, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport NavBar from './NavBar';\nimport Intro from './Intro';\nimport { firebaseAuth } from '../Firebase';\n\nimport { useAuth, useStyles } from '../AuthContext';\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const password2Ref = useRef();\n\n  const { setOpenSnackbar, setMessage, user } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user) {\n      history.push('/home')\n    }\n  }, [user])\n\n\n\n  const signUp = async (e) => {\n    e.preventDefault();\n    if (passwordRef.current.value !== password2Ref.current.value) {\n      setMessage(\"password does not match\");\n      setOpenSnackbar(true);\n      return;\n    }\n    try {\n      await firebaseAuth.createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value);\n      history.push('/home')\n    } catch (e) {\n      setMessage(e.message);\n      setOpenSnackbar(true);\n    }\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <div className={classes.left}>\n        <Intro />\n      </div>\n      <div className={classes.right}>\n        <Container component=\"main\" maxWidth=\"lg\" >\n          <CssBaseline />\n          <div className={classes.center}>\n            <AccountCircleIcon className={classes.icon} color='primary' />\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign Up\n            </Typography>\n            <form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    inputRef={emailRef}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    inputRef={passwordRef}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password2\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    id=\"password2\"\n                    inputRef={password2Ref}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={signUp}\n              >\n                Sign Up\n              </Button>\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  <Link href=\"#/login\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n      </div>\n    </div>\n  );\n}\n","\nimport React, { useRef, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport NavBar from './NavBar';\nimport Intro from './Intro'\nimport { firebaseAuth } from '../Firebase';\n\nimport { useAuth, useStyles } from '../AuthContext';\n\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport default function Login() {\n    const classes = useStyles();\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n\n    const history = useHistory();\n\n    const { setOpenSnackbar, setMessage, user } = useAuth()\n\n    useEffect(() => {\n        if (user) {\n            history.push('/home')\n        }\n    }, [user])\n    const login = async (e) => {\n        e.preventDefault();\n\n        try {\n            await firebaseAuth.signInWithEmailAndPassword(emailRef.current.value, passwordRef.current.value);\n            history.push('/home')\n        } catch (e) {\n            setMessage(e.message);\n            setOpenSnackbar(true);\n        }\n    }\n\n    return (\n        <div>\n\n            <NavBar />\n            <div className={classes.left}>\n                <Intro />\n            </div>\n            <div className={classes.right}>\n                <Container component=\"main\" maxWidth=\"lg\">\n                    <div className={classes.center}>\n                        <AccountCircleIcon className={classes.icon} color='primary' />\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Login\n                        </Typography>\n                        <form className={classes.form} noValidate>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        inputRef={emailRef}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        autoComplete=\"current-password\"\n                                        inputRef={passwordRef}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={login}\n                            >\n                                Log In\n                            </Button>\n                            <Grid container justifyContent=\"flex-end\">\n                                <Grid item>\n                                    <Link href=\"#/signup\" variant=\"body2\">\n                                        Don't have an account? Sign up\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                </Container>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { useAuth } from '../AuthContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport NavBar from './NavBar';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Feedback from '@material-ui/icons/Feedback';\nimport SpeakerNotes from '@material-ui/icons/SpeakerNotes';\nimport Group from '@material-ui/icons/Group';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { useHistory } from 'react-router-dom';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport { CircularProgress, Typography } from '@material-ui/core';\nimport SHA256 from \"crypto-js/sha256\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'left',\n        verticalAlign: 'middle',\n        color: theme.palette.text.secondary,\n        fontSize: '30px'\n    },\n    relativeDiv: {\n        position: 'relative',\n    },\n    leftIcon: {\n        flexGrow: 1,\n    },\n    rightIcon: {\n        display: 'block',\n        position: 'absolute',\n        top: '-7px',\n        right: '-10px'\n    },\n    icon: {\n        color: 'rgb(48, 128, 188)'\n    }\n}));\n\nfunction Home() {\n\n    const { user, setMessage, setOpenSnackbar } = useAuth();\n    const classes = useStyles();\n    const history = useHistory();\n    const [myNotes, setMyNotes] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\n    const [deleteNoteTitle, setDeleteNoteTitle] = useState(\"\");\n    const [deleteNoteId, setDeleteNoteId] = useState(\"\");\n    const [isOwner, setIsOwner] = useState(false);\n\n    useEffect(() => {\n        if (!user) {\n            history.push('/login')\n            return;\n        }\n        setLoading(true)\n        firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).on('child_added', function (data) {\n            var childData = data.val();\n            if (childData) {\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${childData.noteId}-misc`).once('value', function (titleData) {\n                    var titleChild = titleData.val();\n                    const found = myNotes.some(el => el.noteId === childData.noteId);\n                    if (!found) {\n                        setMyNotes(arr => [...arr, { ...titleChild, noteId: childData.noteId }].sort((a, b) => {\n                            return a.createdTime < b.createdTime;\n                        }))\n                    }\n                })\n            }\n\n        })\n\n        setTimeout(() => setLoading(false), 1000);\n\n    }, [user])\n\n    const confirmDeleteNote = (open, title, noteId, isOwner=false) => {\n        setOpenDeleteConfirm(open);\n        setDeleteNoteTitle(title);\n        setDeleteNoteId(noteId);\n        setIsOwner(isOwner);\n    }\n\n    const deleteNoteAction = async (isOwner) => {\n        try {\n            await firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(user.email)}-user`).child(deleteNoteId).remove();\n            if (isOwner) {\n                // if owner, also delete from shared users\n                firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${deleteNoteId}-shared`).once( 'value', (data) => {\n                    var childData = data.val();\n                    if (childData && childData.sharedUsers) {\n                        for (let i = 0; i < childData.sharedUsers.length; i++) {\n                            const sharedEmail = childData.sharedUsers[i].userEmail;\n                            firebase.database().ref(process.env.REACT_APP_DB_NAME).child(`/${SHA256(sharedEmail)}-user`).child(deleteNoteId).remove();\n                        }\n                    }\n                })\n            }\n        } catch (e) {\n            setOpenSnackbar(true)\n            setMessage(e.message)\n            confirmDeleteNote(false, \"\", \"\")\n            return\n        }\n        setMyNotes(arr => [...arr].filter(obj => obj.noteId !== deleteNoteId).sort((a, b) => {\n            return a.createdTime < b.createdTime;\n        }))\n        confirmDeleteNote(false, \"\", \"\")\n    }\n\n    return (\n        <div>\n            <NavBar inUser={true} ></NavBar>\n            {user && loading && <div className='center'><CircularProgress color='primary' size={60} /><Typography variant=\"h5\">Loading Notes...</Typography></div>}\n            {user && !loading && <Box m={2} pt={3}>\n                \n                <Box m={2} pt={3} >\n                    <Typography  variant=\"h4\" className='center'><div><SpeakerNotes style={{fontSize: '32px'}} color='primary'/> My Notes</div></Typography>\n                    <Divider variant=\"middle\" />\n                </Box>\n\n                {(myNotes.length === 0 || !myNotes.some(el => el.createdBy === user.email)) ?\n                    <div className='center'><Feedback color='primary' /><Typography variant=\"h5\" ><div>Looks like you haven't added any notes.</div></Typography></div> :\n                    <Grid container spacing={3}>\n                        {[...myNotes].map((x, i) =>\n                            x.createdBy === user.email &&\n                            <Grid item xs={4} key={x.noteId}>\n                                <Card className={classes.root}>\n                                    <CardContent className={classes.paper}>\n                                        <Typography className={classes.relativeDiv}>\n                                            <AssignmentIcon className={classes.leftIcon} color='primary' />\n                                            <Button onClick={() => { confirmDeleteNote(true, x.title, x.noteId, true) }} className={classes.rightIcon}><DeleteForeverIcon color=\"primary\" /></Button>\n                                        </Typography>\n                                        <CardActionArea component={Link} to={`/note/${x.noteId}`}>\n                                            <Typography variant=\"h5\" > {x.title}</Typography>\n                                            <Typography variant=\"body1\" > {\" \"}</Typography>\n                                            <Typography variant=\"caption\" > {new Date(x.createdTime).toString()}</Typography>\n                                        </CardActionArea>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        )}\n                    </Grid>}\n\n\n                <Box m={2} pt={3} marginTop={10}>\n                    <Typography className='center' variant=\"h4\" > <div><Group style={{fontSize: '32px'}} color='primary'/>  Notes From Friends </div></Typography>\n                    <Divider variant=\"middle\" />\n                </Box>\n\n                {(myNotes.length === 0 || !myNotes.some(el => el.createdBy !== user.email)) ? \n                     <div className='center'><Feedback color='primary' /><Typography variant=\"h5\" >Nothing found. Ask your friends to share a note!</Typography></div>  :\n                    <Grid container spacing={3}>\n                        {[...myNotes].map((x, i) =>\n                            x.createdBy !== user.email &&\n                            <Grid item xs={4} key={x.noteId}>\n                                <Card className={classes.root}>\n                                    <CardContent className={classes.paper}>\n                                        <Typography className={classes.relativeDiv}>\n                                            <AssignmentIcon className={classes.leftIcon} color='primary' />\n                                            <Button onClick={() => { confirmDeleteNote(true, x.title, x.noteId) }} className={classes.rightIcon}><DeleteForeverIcon color=\"primary\" /></Button>\n                                        </Typography>\n\n                                        <CardActionArea component={Link} to={`/note/${x.noteId}`}>\n\n                                            <Typography variant=\"h5\" > {x.title}</Typography>\n                                            <Typography variant=\"body1\" > Shared By: {x.createdBy}</Typography>\n                                            <Typography variant=\"caption\" > {new Date(x.createdTime).toString()}</Typography>\n\n                                        </CardActionArea>\n                                    </CardContent>\n                                </Card>\n\n                            </Grid>\n                        )}\n                </Grid>}\n\n            </Box>}\n\n            <Dialog open={openDeleteConfirm} onClose={() => { confirmDeleteNote(false, \"\", \"\") }} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Deleting Note</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className='center'>\n                        Delete {deleteNoteTitle} ?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => { confirmDeleteNote(false, \"\", \"\") }} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => { deleteNoteAction(isOwner) }} color=\"primary\">\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default Home\n","import NavBar from './NavBar';\nimport { CircularProgress, Typography } from '@material-ui/core';\n\n\nfunction Loading() {\n    return (\n        <div>\n            <NavBar />\n            <div className='center'><CircularProgress color='primary' size={60} /><Typography variant=\"h5\">Loading Notes...</Typography></div>\n        </div>\n    )\n}\n\nexport default Loading\n","import React, { useEffect } from 'react'\nimport { useAuth } from '../AuthContext';\n\nimport NavBar from './NavBar';\nimport Card from '@material-ui/core/Card';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Email from '@material-ui/icons/Email';\nimport Box from '@material-ui/core/Box';\nimport Feedback from '@material-ui/icons/Feedback';\n\nfunction Profile() {\n\n  const { user } = useAuth();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) {\n      history.push('/login')\n      return;\n    }\n  }, [user])\n\n  return (\n\n\n    <div>\n      <NavBar inUser={true}></NavBar>\n      <Card className='center'>\n      <Typography className='center' > <AccountCircle color='primary' style={{fontSize: '32px'}} /> My Profile</Typography>\n      </Card>\n      <Box m={2} pt={3} >\n          <Typography className='center'> <div><Email color='primary'  />   {user.email} </div></Typography>\n      </Box>\n        <Box m={2} pt={3}>\n          <Typography className='center' > <div> <Feedback color='primary' />   More to come... </div></Typography>\n      </Box>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { Route } from 'react-router';\nimport { Redirect } from 'react-router';\nimport { useAuth } from './AuthContext';\n\nfunction RouteWrapper({comp: Comp, ...others}) {\n    const { user } = useAuth()\n\n    return (\n        <Route\n        {...others}\n        render={props => {\n            user ? <Comp {...props} /> : <Redirect to=\"/login\"/>}}\n        ></Route>\n    )\n}\n\nexport default RouteWrapper\n","import { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Signup from './components/Signup';\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Loading from \"./components/Loading\";\nimport Profile from './components/Profile'\nimport { HashRouter, Switch, Redirect } from \"react-router-dom\"\nimport RouteWrapper from \"./RouteWrapper\";\nimport { AuthProvider } from './AuthContext';\nfunction App() {\n\n\n  return (\n    <AuthProvider>\n      <HashRouter>\n        <Switch>\n          <RouteWrapper exact path=\"/\">\n            <Redirect to={`/home`} />\n          </RouteWrapper>\n          <RouteWrapper exact path=\"/signup\">\n            <Signup />\n          </RouteWrapper>\n          <RouteWrapper exact path=\"/login\">\n            <Login />\n          </RouteWrapper>\n          <RouteWrapper exact path=\"/home\">\n            <Home />\n          </RouteWrapper>\n          <RouteWrapper exact path=\"/profile\">\n            <Profile />\n          </RouteWrapper>\n          <RouteWrapper path=\"/note/:noteId\">\n            <Note />\n          </RouteWrapper>\n        </Switch>\n      </HashRouter>\n\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, createTheme } from '@material-ui/core/styles';\n\nconst rgb = 'rgb(48, 128, 188)';\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: rgb,\n      main: rgb,\n      dark: rgb\n    },\n    secondary: {\n      main: rgb,\n    },\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}