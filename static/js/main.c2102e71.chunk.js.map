{"version":3,"sources":["components/Document.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Document","sessionId","classes","quill","useRef","useState","text","docId","useParams","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","useEffect","firebase","initializeApp","database","ref","on","data","childData","val","current","getEditor","updateContents","delta","e","AppBar","position","Toolbar","IconButton","edge","className","color","Typography","variant","Button","value","onChange","content","source","editor","push","App","uuid","exact","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAID,SAASK,EAAT,GAAoC,IAAfC,EAAc,EAAdA,UAE1BC,EAAUX,IACVY,EAAQC,mBACd,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAEQC,GAFR,KAEkBC,cAAVD,OAEFE,EAAiB,CACnBC,OAAQC,0CACRC,WAAYD,oCACZE,UAAWF,oBACXG,cAAeH,gCACfI,kBAAmBJ,eACnBK,MAAOL,6CAGXM,qBAAU,WACV,IACIC,IAASC,cAAcV,GAEvBS,IAASE,WAAWC,IAApB,WAA4Bd,IAASe,GAAG,eAAe,SAASC,GAC5D,IAAIC,EAAYD,EAAKE,MACjBtB,GAASqB,EAAUvB,YAAcA,GAClBE,EAAMuB,QAAQC,YACtBC,eAAeJ,EAAUK,UAG1C,MAAOC,OAGN,IAUH,OACI,gCAEI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWlC,EAAQN,WAAYyC,MAAM,UAAU,aAAW,OAAnF,SACA,cAAC,IAAD,MAEA,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWlC,EAAQH,MAA5C,+BAGA,eAACyC,EAAA,EAAD,CAAQH,MAAM,UAAd,cAAyB,cAAC,IAAD,YAKjC,cAAC,IAAD,CACI5C,MAAM,OACNgD,MAAOnC,EACPoC,SA3BU,SAACC,EAASd,EAAOe,EAAQC,GAC5B,SAAXD,GAIJ1B,IAASE,WAAWC,IAApB,WAA4Bd,IAASuC,KAAK,CAAE7C,UAAWA,EAAY4B,MAAQA,KAuBnER,IAAKlB,O,6BC/DN4C,MApBf,WACE,IAAM9C,EAAY+C,MAElB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUC,GAAE,WAAMH,WAEpB,eAAC,IAAD,CAAOE,KAAK,UAAZ,UACE,cAAClD,EAAD,CACEC,UAAWA,IAEb,gDCfVmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c2102e71.chunk.js","sourcesContent":["import Recat, { useState, useEffect, useRef } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport ReactQuill from 'react-quill';\nimport firebase from 'firebase'\nimport 'react-quill/dist/quill.snow.css';\nimport '../styles.css'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nexport default function Document( { sessionId } ) {\n\n    const classes = useStyles();\n    const quill = useRef();\n    const [text, setText] = useState(\"\");\n\n    const { docId } = useParams();\n\n    const firebaseConfig = {\n        apiKey: process.env.REACT_APP_API_KEY,\n        authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n        projectId: process.env.REACT_APP_PROJECT_ID,\n        storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n        messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n        appId: process.env.REACT_APP_APP_ID\n    };\n    // Initialize Firebase\n    useEffect(() => {\n    try {\n        firebase.initializeApp(firebaseConfig);\n\n        firebase.database().ref(`/${docId}`).on('child_added', function(data) {\n            var childData = data.val();\n            if (quill && childData.sessionId !== sessionId) {\n                const editor = quill.current.getEditor();\n                editor.updateContents(childData.delta);\n            }\n        })\n    } catch (e) {\n\n    }\n    }, []);\n\n    const uploadChanges = (content, delta, source, editor) => {\n        if (source !== 'user') {\n            return;\n        }\n    \n        firebase.database().ref(`/${docId}`).push({ sessionId: sessionId , delta : delta } );\n    }\n\n    return (\n        <div>\n\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                    Collaborative Doc\n                    </Typography>\n                    <Button color=\"inherit\"> <AccountCircle /></Button>\n                </Toolbar>\n            </AppBar> \n       \n        \n            <ReactQuill \n                theme=\"snow\"\n                value={text}\n                onChange={uploadChanges}\n                ref={quill}\n            />\n        </div>\n    )\n\n}","\nimport Document from \"./components/Document\";\nimport uuid from 'react-uuid'\n\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\"\n\nfunction App() {\n  const sessionId = uuid();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to={`/${uuid()}`} />\n        </Route>\n        <Route path=\"/:docId\">\n          <Document \n            sessionId={sessionId}\n          />\n          <div>v1.2</div>\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}